1. Setup Robot Simulation
   1.1 Multirobot simulation
   1.2 Movement controller node
   1.3 Ros bridge

2. Setup blockchain
   2.1 Network initialize
   2.2 Deploy smart contract with correct RPC port
   2.3 Initialize tasks using correct smart contract address

3. Start blockchain client-node interface

4. Check RQT_GRAPH: ros_webserver need to be connected to movement controller node with topics

10 terminal setup for physical robot:

Set up physical robot
1. roscore
2. bring up robot (pi)
3. turtlebot navigation 
4. teleop 
5. blockchain navigator
6. rosbridge webserver
7. rqt_graph (optional monitor)
8. topic echo (optional monitor)
9. smart contract deploy and monitor
10. blockchain client

Problems notes:

1. 2.4 the message sending start before the node connect to rosbridge
1. /taskAssign topic could be spammed, can use timestamp to prevent it (v)
1. How to Received message => add delay to while loop, problem was the while loop runs, (v)
1. Check the reporting to blockchain system (v)
1. Why it show transaction failed? Need debugging. status is not available => try catch (v)
1. Why the contract keep assigning to 1? (v)
1. The interaction is good for now! <3
1. Build location system - firebase server with a storing system for offline working => firebase is only for changes of locations (v)
1. Stop smart contract from revertin stage (v)
1. make sure the robot return stage 1 only when it start the job successfully (v)
1. summarize the system
1. Plan out what can be improved, and choose what to improve
1. Plan out the thesis
1. Propose to the teacher
1. robot navigation, and code processing
1. deal with new robot registration and failure solving procedure (robot failure or enviromental failure).
1. Discuss on signing method of validation: Receiver need to sign a transaction before taking a good from robot, robot uses that signature to update successful delivery.
   The signature may associated with the good delivered
1. Limitations: not into formation research
1. map sharing for physical system: a cloud server for map?
1. Time & Distance task allocation: need a map server, blockchain store robot locations, smart-contract connects to map server, smart-contract process path-finding & optimization
1. Consider letting robot return to base while global idle value is high
1. Measure task allocation effieciency by collecting metrics (distance travel) / tasks completed. The lower the net number of the system, the better task allocation is.

transaction.data is function + parameter value in hex

blockchain store the transaction history and the smart contract store the data

Work left for today:

- Simulate the whole system. (1h30)
- Prepare a list of question. (2h)
